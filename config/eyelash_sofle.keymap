#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    thh: thh {
        compatible = "zmk,behavior-hold-tap";
        label = "THH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    q_tog_4: q_tog_4 {
        compatible = "zmk,behavior-tap-dance";
        label = "q or tap dance 5 tog 4 layer";
        #binding-cells = <0>;
        bindings = <&kp Q>, <&none>, <&none>, <&none>, <&tog 4>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1           &kp N2           &kp N3             &kp N4               &kp N5       &none  &kp N6       &kp N7                &kp N8              &kp N9            &kp N0               &kp BACKSPACE
&kp TAB     &q_tog_4         &kp W            &kp E              &kp R                &kp T        &none  &kp Y        &kp U                 &kp I               &kp O             &kp P                &kp BSLH
&kp ESCAPE  &thh LEFT_WIN A  &thh LEFT_ALT S  &thh LEFT_SHIFT D  &thh LEFT_CONTROL F  &lt 6 G      &none  &kp H        &thh RIGHT_CONTROL J  &thh RIGHT_SHIFT K  &thh RIGHT_ALT L  &thh RIGHT_WIN SEMI  &kp APOS
&kp LSHFT   &kp Z            &kp X            &kp C              &kp V                &lt 5 B      &none  &kp N        &kp M                 &kp COMMA           &kp DOT           &lt 3 SLASH          &kp RIGHT_SHIFT
&none       &kp LCTRL        &kp LEFT_GUI     &kp LEFT_ALT       &kp DEL              &lt 1 RET    &none  &lt 2 SPACE  &kp BACKSPACE         &kp TAB             &kp MINUS         &kp EQUAL
            >;

            display-name = "LAYER0";
        };

        number {
            bindings = <
&trans  &trans  &trans            &trans              &trans                &trans     &none  &trans     &none                        &trans               &trans                   &trans                 &trans
&trans  &trans  &kp F7            &kp F8              &kp F9                &kp F10    &none  &kp MINUS  &kp N7                       &kp N8               &kp N9                   &kp LEFT_BRACKET       &kp RIGHT_BRACKET
&trans  &trans  &thh LEFT_ALT F4  &thh LEFT_SHIFT F5  &thh LEFT_CONTROL F6  &kp F11    &none  &kp PLUS   &thh RIGHT_CONTROL NUMBER_4  &thh RIGHT_SHIFT N5  &thh RIGHT_ALT NUMBER_6  &kp LEFT_BRACE         &kp RIGHT_BRACE
&trans  &trans  &kp F1            &kp F2              &kp F3                &kp F12    &none  &kp N0     &kp NUMBER_1                 &kp N2               &kp N3                   &kp SLASH              &kp ASTERISK
&trans  &trans  &trans            &trans              &trans                &trans     &none  &kp EQUAL  &kp UNDERSCORE               &trans               &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS
            >;
        };

        arrow {
            bindings = <
&kp GRAVE  &kp F1            &kp F2          &kp F3  &kp F4        &kp F5    &none  &kp F6     &kp F7     &kp F8     &kp F9     &kp F10          &trans
&trans     &trans            &msc SCRL_DOWN  &trans  &msc SCRL_UP  &trans    &none  &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp PRINTSCREEN  &trans
&trans     &kp LA(NUMBER_1)  &trans          &trans  &trans        &trans    &none  &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp INSERT       &kp RS(F6)
&trans     &trans            &trans          &trans  &trans        &trans    &none  &kp RC(X)  &kp RC(C)  &kp RC(V)  &kp RC(Z)  &kp RC(RS(Z))    &trans
&none      &trans            &trans          &trans  &trans        &trans    &none  &trans     &trans     &trans     &trans     &trans
            >;

            display-name = "arrow";
            sensor-bindings = <&scroll_encoder>;
        };

        workspace {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans      &none  &trans                  &trans               &trans                 &trans                  &trans                   &trans
&trans  &trans  &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &trans      &none  &kp RA(F4)              &kp RG(F7)           &kp RG(F8)             &kp RG(F9)              &trans                   &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans      &none  &kp RA(RC(RIGHT))       &kp RG(F4)           &kp RG(F5)             &kp RG(F6)              &trans                   &trans
&trans  &trans  &trans          &trans          &trans           &trans      &none  &kp RA(RC(LEFT_ARROW))  &kp RG(F1)           &kp RG(F2)             &kp RG(F3)              &trans                   &trans
&trans  &trans  &trans          &mkp MB2        &mkp MB3         &mkp MB1    &none  &kp RS(RG(L))           &kp RS(RG(PAGE_UP))  &kp RS(RG(PAGE_DOWN))  &kp RS(RG(LEFT_ARROW))  &kp RS(RG(RIGHT_ARROW))
            >;
        };

        service {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &none  &trans           &none            &trans           &trans           &trans           &trans
&out OUT_BLE    &tog 4        &none         &studio_unlock  &sys_reset    &bootloader     &none  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &none
&out OUT_USB    &none         &none         &none           &none         &none           &none  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &none
&out OUT_TOG    &none         &none         &none           &none         &none           &none  &none            &none            &none            &none            &bootloader      &trans
&none           &trans        &trans        &trans          &trans        &trans          &none  &trans           &rgb_ug RGB_TOG  &trans           &trans           &trans
            >;
        };

        brackets {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans                &trans                 &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans                &trans                 &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                 &trans           &trans        &trans                &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp MINUS              &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PLUS               &kp DOLLAR       &kp PERCENT   &kp CARET             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp EQUAL              &kp UNDERSCORE   &trans        &trans                &trans
            >;
        };
    };
};
