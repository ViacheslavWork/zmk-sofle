#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    thh: thh {
        compatible = "zmk,behavior-hold-tap";
        label = "THH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    q_tog_4: q_tog_4 {
        compatible = "zmk,behavior-tap-dance";
        label = "q or tap dance 5 tog 4 layer";
        #binding-cells = <0>;
        bindings = <&kp Q>, <&none>, <&none>, <&none>, <&tog 4>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1     &kp N2           &kp N3             &kp N4               &kp N5       &kp UP_ARROW     &kp N6       &kp N7                &kp N8              &kp N9            &kp N0     &kp BACKSPACE
&kp TAB     &q_tog_4   &kp W            &kp E              &kp R                &kp T        &kp DOWN_ARROW   &kp Y        &kp U                 &kp I               &kp O             &kp P      &kp BSLH
&kp ESCAPE  &kp A      &thh LEFT_ALT S  &thh LEFT_SHIFT D  &thh LEFT_CONTROL F  &kp G        &kp LEFT_ARROW   &kp H        &thh RIGHT_CONTROL J  &thh RIGHT_SHIFT K  &thh RIGHT_ALT L  &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X            &kp C              &kp V                &kp B        &kp RIGHT_ARROW  &kp N        &kp M                 &kp COMMA           &kp DOT           &kp FSLH   &kp RIGHT_SHIFT
&none       &kp LCTRL  &kp LEFT_GUI     &kp LEFT_ALT       &kp DEL              &lt 1 RET    &kp ENTER        &lt 2 SPACE  &lt 3 BACKSPACE       &kp RIGHT_GUI       &kp MINUS         &kp EQUAL
            >;

            display-name = "LAYER0";
        };

        number {
            bindings = <
&trans  &trans   &trans   &trans  &trans  &trans    &mmv MOVE_UP     &trans     &none         &trans  &trans  &trans            &trans
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &mmv MOVE_DOWN   &kp MINUS  &kp N7        &kp N8  &kp N9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &kp F12  &trans   &trans  &trans  &kp F6    &mmv MOVE_LEFT   &kp PLUS   &kp N4        &kp N5  &kp N6  &kp SLASH         &trans
&trans  &kp F11  &kp F10  &kp F9  &kp F8  &kp F7    &mmv MOVE_RIGHT  &kp N0     &kp NUMBER_1  &kp N2  &kp N3  &kp ASTERISK      &trans
&trans  &trans   &trans   &trans  &trans  &trans    &mkp LCLK        &trans     &trans        &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        arrow {
            bindings = <
&kp GRAVE  &kp F1  &kp F2          &kp F3  &kp F4        &kp F5    &mmv MOVE_UP     &kp F6     &kp F7      &kp F8       &kp F9     &kp F10          &trans
&trans     &trans  &msc SCRL_DOWN  &trans  &msc SCRL_UP  &trans    &mmv MOVE_DOWN   &kp PG_UP  &kp HOME    &kp UP       &kp END    &kp PRINTSCREEN  &trans
&trans     &trans  &trans          &trans  &trans        &trans    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT    &kp DOWN     &kp RIGHT  &kp K_UNDO       &trans
&trans     &trans  &trans          &trans  &trans        &trans    &mmv MOVE_RIGHT  &kp RC(X)  &kp K_COPY  &kp K_PASTE  &kp RC(Z)  &kp K_REDO       &trans
&none      &trans  &trans          &trans  &trans        &trans    &mkp LCLK        &trans     &trans      &trans       &trans     &trans
            >;

            display-name = "arrow";
            sensor-bindings = <&scroll_encoder>;
        };

        workspace {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans      &trans      &trans      &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &kp RG(F7)  &kp RG(F8)  &kp RG(F9)  &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RA(RC(RIGHT))       &kp RG(F4)  &kp RG(F5)  &kp RG(F6)  &kp RS(RC(END))   &kp RS(RG(RIGHT))
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RA(RC(LEFT_ARROW))  &kp RG(F1)  &kp RG(F2)  &kp RG(F3)  &kp RS(RC(HOME))  &kp RS(RG(LEFT))
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans      &trans      &trans      &trans
            >;
        };

        service {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans           &none            &trans           &trans           &trans           &trans
&out OUT_BLE    &tog 0        &none         &studio_unlock  &sys_reset    &bootloader     &mmv MOVE_DOWN   &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &none
&out OUT_USB    &none         &none         &none           &none         &none           &mmv MOVE_LEFT   &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &none
&out OUT_TOG    &none         &none         &none           &none         &none           &mmv MOVE_RIGHT  &none            &none            &none            &none            &bootloader      &trans
&trans          &trans        &trans        &trans          &trans        &trans          &mkp LCLK        &trans           &rgb_ug RGB_TOG  &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
